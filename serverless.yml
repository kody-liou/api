service: social-app
frameworkVersion: '3.1.1'
useDotenv: true
plugins:
  - serverless-plugin-typescript
  - serverless-offline
custom:
  serverless-offline:
    host: 0.0.0.0
    noAuth: true
provider:
  deploymentBucket:
    name: ${env:AWS_DEPLOYMENT_BUCKET_NAME}
    serverSideEncryption: AES256
  name: aws
  runtime: nodejs14.x
  region: ${env:REGION}
  httpApi:
    cors: true
    authorizers:
      customAuthorizer:
        type: request
        functionName: authorizerFunc
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Resource: '*'
          Action:
            - s3:PutObject
            - s3:GetObject
            - s3:DeleteObject
            - s3:ListBucket
functions:
  authorizerFunc:
    handler: controllers/authorizer.default
  profileCreate:
    handler: controllers/profile.profileCreate
    events:
      - httpApi:
          method: post
          path: /profiles
          authorizer: customAuthorizer
  profileGet:
    handler: controllers/profile.profileGet
    events:
      - httpApi:
          method: get
          path: /profiles/{profileId}
          authorizer: customAuthorizer
  profilesGet:
    handler: controllers/profile.profilesGet
    events:
      - httpApi:
          method: get
          path: /profiles
          authorizer: customAuthorizer
  profileUpdate:
    handler: controllers/profile.profileUpdate
    events:
      - httpApi:
          method: put
          path: /profiles/{profileId}
          authorizer: customAuthorizer
  profileRemove:
    handler: controllers/profile.profileRemove
    events:
      - httpApi:
          method: delete
          path: /profiles/{profileId}
          authorizer: customAuthorizer
